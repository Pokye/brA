function	script	F_GetPlatinumSkills	{
	skill "NV_FIRSTAID",1,SKILL_PERM;
	switch (BaseClass) {
	case Job_Novice:
		if (Class != Job_Super_Novice)
			skill "NV_TRICKDEAD",1,SKILL_PERM;
		break;
	case Job_Swordman:
		skill "SM_MOVINGRECOVERY",1,SKILL_PERM;
		skill "SM_FATALBLOW",1,SKILL_PERM;
		skill "SM_AUTOBERSERK",1,SKILL_PERM;
		break;
	case Job_Mage:
		skill "MG_ENERGYCOAT",1,SKILL_PERM;
		break;
	case Job_Archer:
		skill "AC_MAKINGARROW",1,SKILL_PERM;
		skill "AC_CHARGEARROW",1,SKILL_PERM;
		break;
	case Job_Acolyte:
		skill "AL_HOLYLIGHT",1,SKILL_PERM;
		break;
	case Job_Merchant:
		skill "MC_CARTREVOLUTION",1,SKILL_PERM;
		skill "MC_CHANGECART",1,SKILL_PERM;
		skill "MC_LOUD",1,SKILL_PERM;
		if(PACKETVER >= 20150826)
			skill "MC_CARTDECORATE",1,SKILL_PERM;
		break;
	case Job_Thief:
		skill "TF_SPRINKLESAND",1,SKILL_PERM;
		skill "TF_BACKSLIDING",1,SKILL_PERM;
		skill "TF_PICKSTONE",1,SKILL_PERM;
		skill "TF_THROWSTONE",1,SKILL_PERM;
		break;
	default:
		break;
	}
	switch (BaseJob) {
	case Job_Knight:
		skill "KN_CHARGEATK",1,SKILL_PERM;
		break;
	case Job_Priest:
		skill "PR_REDEMPTIO",1,SKILL_PERM;
		break;
	case Job_Wizard:
		skill "WZ_SIGHTBLASTER",1,SKILL_PERM;
		break;
	case Job_Blacksmith:
		skill "BS_UNFAIRLYTRICK",1,SKILL_PERM;
		skill "BS_GREED",1,SKILL_PERM;
		break;
	case Job_Hunter:
		skill "HT_PHANTASMIC",1,SKILL_PERM;
		break;
	case Job_Assassin:
		skill "AS_SONICACCEL",1,SKILL_PERM;
		skill "AS_VENOMKNIFE",1,SKILL_PERM;
		break;
	case Job_Crusader:
		skill "CR_SHRINK",1,SKILL_PERM;
		break;
	case Job_Monk:
		skill "MO_KITRANSLATION",1,SKILL_PERM;
		skill "MO_BALKYOUNG",1,SKILL_PERM;
		break;
	case Job_Sage:
		skill "SA_CREATECON",1,SKILL_PERM;
		skill "SA_ELEMENTWATER",1,SKILL_PERM;
		skill "SA_ELEMENTGROUND",1,SKILL_PERM;
		skill "SA_ELEMENTFIRE",1,SKILL_PERM;
		skill "SA_ELEMENTWIND",1,SKILL_PERM;
		break;
	case Job_Rogue:
		skill "RG_CLOSECONFINE",1,SKILL_PERM;
		break;
	case Job_Alchemist:
		skill "AM_BIOETHICS",1,SKILL_PERM;
		break;
	case Job_Bard:
		skill "BA_PANGVOICE",1,SKILL_PERM;
		break;
	case Job_Dancer:
		skill "DC_WINKCHARM",1,SKILL_PERM;
		break;
	default:
		break;
	}
	return 0;
}
function	script	F_IsEquipIDHack	{
	set .@id_chk, getequipid(getarg(0));
	set .@id, getarg(1);
	if (.@id != .@id_chk) {
		logmes "Hack: Tried to swap equip " + getitemname(.@id) + " for " + getitemname(.@id_chk) + ".";
		return 1;
	}
	return 0;
}
function	script	F_IsEquipRefineHack	{
	set .@refine_chk, getequiprefinerycnt(getarg(0));
	set .@refine, getarg(1);
	if (.@refine != .@refine_chk) {
		logmes "Hack: Tried to swap equip with refine +" + .@refine + " for +" + .@refine_chk + ".";
		return 1;
	}
	return 0;
}
function	script	F_IsEquipCardHack	{
	set .@pos, getarg(0);
	for (set .@i,0; .@i < 4; set .@i, .@i+1) {
		set .@card, getarg(.@i + 1);
		set .@card_chk, getequipcardid(.@pos, .@i);
		if (.@card != .@card_chk) {
			logmes "Hack: Tried to swap card " + getitemname(.@card) + " for " + getitemname(.@card_chk) + ".";
			return 1;
		}
	}
	return 0;
}
function	script	F_VerificaDualIP	{
		if(getgmlevel()>= 99)
			return 0;
	query_sql("SELECT login.account_id FROM login LEFT JOIN `char` ON login.account_id=`char`.account_id " + 
	          "WHERE login.last_ip=(SELECT last_ip FROM login WHERE account_id="+getcharid(3)+") " + 
	          "AND `char`.online=1 AND login.account_id!="+getcharid(3), .@account_id);
			 .@i = getarraysize(.@account_id);
			 return .@i;
	}

function	script	F_getpositionname	{
	switch( getarg(0,999) ) {
		case EQI_ACC_L:		return "Acessorio 1";
		case EQI_ACC_R:		return "Acessorio 2";
		case EQI_SHOES:		return "Sapatos";
		case EQI_GARMENT:	return "Capa";
		case EQI_HEAD_LOW:	return "Baixo";
		case EQI_HEAD_MID:	return "Meio";
		case EQI_HEAD_TOP:	return "Topo";
		case EQI_ARMOR:		return "Armadura";
		case EQI_HAND_L:	return "Mao esquerda";
		case EQI_HAND_R:	return "Mao direita";
		case EQI_COSTUME_HEAD_TOP:	return "Upper Costume Headgear";
		case EQI_COSTUME_HEAD_MID:	return "Middle Costume Headgear";
		case EQI_COSTUME_HEAD_LOW:	return "Lower Costume Headgear";
		case EQI_COSTUME_GARMENT:	return "Costume Garment";
		case EQI_AMMO:			return "Arrow/Ammunition";
		case EQI_SHADOW_ARMOR:	return "Shadow Armor";
		case EQI_SHADOW_WEAPON:	return "Shadow Weapon";
		case EQI_SHADOW_SHIELD:	return "Shadow Shield";
		case EQI_SHADOW_SHOES:	return "Shadow Shoes";
		case EQI_SHADOW_ACC_R:	return "Shadow Accessory 2";
		case EQI_SHADOW_ACC_L:	return "Shadow Accessory 1";
		default:
			return "Unknown";
	}
}
